{"version":3,"sources":["components/Book/Context/reducers.js","components/Book/Context/Store.js","components/Book/Page.jsx","components/Book/Book.jsx","components/Book/index.js","App.js","serviceWorker.js","index.js"],"names":["defaultValues","page","total","move","reducers","state","action","type","payload","Store","createContext","StoreProvider","children","useReducer","store","actions","Provider","value","ContainerPage","styled","div","bg","zIndex","isPaginated","Page","front","props","back","useContext","console","log","BookContainer","closed","Side","Book","dispatch","nextPage","useCallback","previousPage","IconButton","disabled","onClick","fontSize","paginated","ContextConection","Wrapper","section","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c1eda86.chunk.js","sourcesContent":["const SET_PAGE = 'SET_PAGE'\nconst SET_MOVE = 'SET_MOVE'\n\nexport const defaultValues = {\n  page: 0,\n  total: 6,\n  move: 'next'\n}\n\nconst reducers = (state = defaultValues, action) => {\n  switch (action.type) {\n    case SET_PAGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpage: action.payload\n      }\n    case SET_MOVE:\n      return {\n        ...state,\n        move: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducers\n","import React, { createContext, useReducer } from 'react'\nimport reducers, { defaultValues } from './reducers'\n\nexport const Store = createContext()\n\nconst StoreProvider = ({ children }) => {\n  const [store, actions] = useReducer(reducers, defaultValues)\n\n  return <Store.Provider value={[store, actions]}>{children}</Store.Provider>\n}\n\nexport default StoreProvider","import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { Store } from './Context/Store'\n\nconst Page = ({front, back, page, ...props}) => {\n\tconst [store, dispatch] = useContext(Store)\n\n\n\t//Refactor this :(\n\tconst generateIndex = () => {\n\t\tswitch(store.move) {\n\t\t\tcase 'next':\n\t\t\t\t//Page on animation translate logic\n\t\t\t\tif(front + 2 === store.page){\n\t\t\t\t\tconsole.log('(next) front = ', front)\n\t\t\t\t\treturn 999\n\t\t\t\t}\n\t\t\t\t//Generic zindex logic\n\t\t\t\tif(store.page > front) {\n\t\t\t\t\treturn front\n\t\t\t\t}\n\t\t\t\treturn store.total - front\n\t\t\tcase 'previous': \n\t\t\t\tconsole.log('front', front)\n\t\t\t\tif(front === store.page){\n\t\t\t\t\tconsole.log('(previous) front = ', front)\n\t\t\t\t\treturn 999\n\t\t\t\t}\n\t\t\t\tif(store.page > front) {\n\t\t\t\t\treturn front\n\t\t\t\t}\n\t\t\t\treturn store.total - front\n\t\t\tdefault:\n\t\t\t\treturn 'not handled'\n\t\t}\n\t}\n\n\n\t\n\n\treturn (\n\t\t<ContainerPage zIndex={generateIndex} bg={props.bg} isPaginated={store.page > front}>\n\t\t</ContainerPage>\n\t)\n}\n\nconst ContainerPage = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: ${({bg = 'light-grey'}) => bg};\n\ttransform-style: preserve-3d;\n\ttransition: transform 1s cubic-bezier(0.250, 0.460, 0.450, 0.940);\n\tposition: absolute;\n\tz-index: ${({zIndex}) => zIndex};\n\n\t${({isPaginated}) => `\n\t\ttransform: ${isPaginated ? 'rotateY(-180deg)' : 'rotateY(0deg)'};\n\t\ttransform-origin: left bottom;\n\t`}\n`\n\nexport default Page","import React, { useContext, useCallback } from 'react'\nimport styled from 'styled-components'\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\n\nimport Page from './Page'\n\nimport { Store } from './Context/Store'\n\nconst Book = () => {\n\tconst [store, dispatch] = useContext(Store)\n\n\tconst nextPage = useCallback(\n\t\t() => {\n\t\t\tdispatch({type: 'SET_PAGE', payload: store.page + 2})\n\t\t\tdispatch({type: 'SET_MOVE', payload: 'next'})\n\t\t},\n\t\t[dispatch, store.page],\n\t)\n\n\tconst previousPage = useCallback(\n\t\t() => {\n\t\t\tdispatch({type: 'SET_PAGE', payload: store.page - 2})\n\t\t\tdispatch({type: 'SET_MOVE', payload: 'previous'})\n\t\t},\n\t\t[dispatch, store.page],\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t\t<IconButton disabled={store.page === 0} onClick={previousPage}>\n\t\t\t\t\t<KeyboardArrowLeftIcon fontSize='large'/>\n\t\t\t\t</IconButton>\n\t\t\t\t<BookContainer closed={(store.page === 0 && 'start') || (store.page === store.total && 'end')}>\n\t\t\t\t\t<Side paginated closed={store.page === 0} />\n\t\t\t\t\t<Side closed={store.page === store.total}>\n\t\t\t\t\t\t<Page front={4} back={5} bg='blue'/>\n\t\t\t\t\t\t<Page front={2} back={3} bg='green'/>\n\t\t\t\t\t\t<Page front={0} back={1} bg='grey'/>\n\t\t\t\t\t</Side>\n\t\t\t\t</BookContainer>\n\t\t\t\t<IconButton disabled={store.page === store.total} onClick={nextPage}>\n\t\t\t\t\t<KeyboardArrowRightIcon fontSize='large' />\n\t\t\t\t</IconButton>\n\t\t</>\n\t)\n}\n\n\nconst BookContainer = styled.div`\n\tdisplay: flex;\n\tposition: relative;\n\theight: 80%;\n\twidth: 70%;\n\ttransform: ${({closed}) => `translateX(${closed ? (closed === 'start' ? '-24%' : '24%') : '0'})`};\n\ttransition: transform 0.5s ease 0.4s;\n`\n\nconst Side = styled.div`\n\tbox-shadow: ${({closed}) => `0 10px 20px rgba(0,0,0, ${closed ? '0' : '0.19'}), 0 6px 6px rgba(0,0,0, ${closed ? '0' : '0.23'})`};\n\tflex: 1;\n\tperspective: 1500px;\n\tperspective-origin: calc(50% + 50px) 50%;\n\t${({closed}) => closed ? '' : 'transition: box-shadow ease 0.4s 0.5s'};\n`\n\nexport default Book","import React from 'react'\nimport StoreProvider from './Context/Store'\nimport Book from './Book.jsx'\n\nconst ContextConection = () => {\n\treturn (\n\t\t<StoreProvider>\n\t\t\t<Book />\n\t\t</StoreProvider>\n\t)\n}\n\nexport default ContextConection","import React from 'react';\nimport styled from 'styled-components'\n\nimport { Book } from './components'\n\n\nimport './App.css';\n\nconst App = () => {\n\n  return (\n    <Wrapper>\n      <Book />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.section`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-color: #eaeaea;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}